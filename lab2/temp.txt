原始版本:
%{
    //#include "syntax.tab.h"
    #include <stdio.h>
    #include <stdarg.h>
    #include <string.h>
    #include <stdlib.h>
    #include "common.h"

    #define debug 0

    int lexerror_count=0;

    int yycolumn = 1;
    #define YY_USER_ACTION \
        yylloc.first_line = yylloc.last_line = yylineno; \
	    yylloc.first_column = yycolumn; \
	    yylloc.last_column = yycolumn + yyleng - 1; \
	    yycolumn += yyleng;

    void create_lexnode(char*name,dtype type,int fline)
    {
        yylval.node=create_node(name,type,fline,0);
    }

    void print_error(char type , int line, char* msg){
        lexerror_count++;
        printf("Error type %c at Line %d: %s.\n", type,line, msg);
    }
    
%}

%option yylineno
blank     [ \t\r\f\v]+
digit     [0-9]
letter    [_a-zA-Z]
INT       0|([1-9]{digit}*)
FLOAT     {digit}+\.{digit}+
ID        {letter}({digit}|{letter})*
OCT       0[0-7]+
HEX       0[Xx][0-9a-fA-F]+
SEMI      ";"
COMMA     ","
ASSIGNOP  "="
RELOP     ">"|"<"|">="|"<="|"=="|"!="
PLUS      "+"
MINUS     "-"
STAR      "*"
DIV       "/"
AND       "&&"
OR        "||"
DOT       "."
NOT       "!"

TYPE      int | float   //太傻逼了
LP        \(
RP        \)
LB        \[
RB        \]
LC        \{
RC        \}
STRUCT    struct
RETURN    return
IF        if
ELSE      else
WHILE     while

blank     [ \t\r\f\v]+
digit     [0-9]
letter    [_a-zA-Z]
INT       0|([1-9]{digit}*)
FLOAT     {digit}+\.{digit}+
ID        {letter}({digit}|{letter})*
OCT       0[0-7]+
HEX       0[Xx][0-9a-fA-F]+
SEMI      ";"
COMMA     ","
ASSIGNOP  "="
RELOP   ">"|"<"|">="|"<="|"=="|"!="
PLUS    "+"
MINUS   "-"
STAR    "*"
DIV     "/"
AND     "&&"
OR      "||"
DOT     "."
NOT     "!"
TYPE    int|float
LP      \(
RP      \)
LB      \[
RB      \]
LC      \{
RC      \}
STRUCT  struct
RETURN  return
IF      if
ELSE    else
WHILE   while


%%

{RELOP}       {create_lexnode("RELOP",type_ch,yylineno);/*return RELOP;*/}
{SEMI}        {create_lexnode("SEMI",type_ch,yylineno);/*return SEMI;*/}
{COMMA}       {create_lexnode("COMMA",type_ch,yylineno);/*return COMMA;*/}
{ASSIGNOP}    {create_lexnode("ASSIGNOP",type_ch,yylineno);/*return ASSIGNOP;*/}
{PLUS}        {create_lexnode("PLUS",type_ch,yylineno);/*return PLUS;*/}
{MINUS}       {create_lexnode("MINUS",type_ch,yylineno);/*return MINUS;*/}
{STAR}        {create_lexnode("STAR",type_ch,yylineno);/*return STAR;*/}
{DIV}         {create_lexnode("DIV",type_ch,yylineno);/*return DIV;*/}
{AND}         {create_lexnode("AND",type_ch,yylineno);/*return AND;*/}
{OR}          {create_lexnode("OR",type_ch,yylineno); /*return OR;*/}
{DOT}         {create_lexnode("DOT",type_ch,yylineno);/*return DOT;*/}
{NOT}         {create_lexnode("NOT",type_ch,yylineno);/*return NOT;*/}
{LP}          {create_lexnode("LP",type_ch,yylineno);/*return LP;*/}
{RP}          {create_lexnode("RP",type_ch,yylineno);/*return RP;*/}
{LB}          {create_lexnode("LB",type_ch,yylineno);/*return LB;*/}
{RB}          {create_lexnode("RB",type_ch,yylineno);/*return RB;*/}
{LC}          {create_lexnode("LC",type_ch,yylineno);/*return LC;*/}
{RC}          {create_lexnode("RC",type_ch,yylineno);/*return RC;*/}
{ID}          {create_lexnode("ID",type_id,yylineno);/*strcpy((yylval.node)->val.id_val,yytext);/*return ID;*/}
{STRUCT}      {create_lexnode("STRUCT",type_ch,yylineno);/*return STRUCT;*/}
{RETURN}      {create_lexnode("RETURN",type_ch,yylineno);/*return RETURN;*/}
{IF}          {create_lexnode("IF",type_ch,yylineno); /*return IF;*/}
{ELSE}        {create_lexnode("ELSE",type_ch,yylineno);/*return ELSE;*/}
{WHILE}       {create_lexnode("WHILE",type_ch,yylineno);/*return WHILE;*/}
{TYPE}        {create_lexnode("TYPE",type_type,yylineno);/*strcpy((yylval.node)->val.id_val,yytext);/*return TYPE;*/}
{FLOAT}       {create_lexnode("FLOAT",type_float,yylineno);/*(yylval.node)->val.float_val=atof(yytext);/*return FLOAT;*/}
{INT}         {create_lexnode("INT",type_int,yylineno);/*(yylval.node)->val.int_val=atoi(yytext);/*return INT;*/}
{OCT}         {create_lexnode("OCT",type_int,yylineno);/*(yylval.node)->val.int_val=(int)strtol(yytext,NULL,0);/*return INT;*/}
{HEX}         {create_lexnode("HEX",type_int,yylineno);/*(yylval.node)->val.int_val=(int)strtol(yytext,NULL,0);/*return INT;*/}
\n            {yycolumn=1;}
0[Xx][0-9a-fA-F]*[^0-9a-fA-F]+[0-9a-fA-F]*  {print_error('A',yylineno,"Illegal hexadecimal number");/*return INT;*/}
0[0-7]*[^0-7]+[0-7]*  {print_error('A',yylineno,"Illegal octal number");/*return INT;*/}
{digit}+[^0-9]+       {print_error('A',yylineno,"Illegal integ number");/*return INT;*/}
({INT}\.)|(\.{INT})   {print_error('A',yylineno,"Illegal float number");/*return FLOAT;*/}
{letter}*[^_0-9a-zA-Z]+({letter}|{digit})*  {print_error('A',yylineno,"Illegal ID");/*return ID;*/}
{blank}       {}
.             {print_error('A',yylineno,"Illegal character");}


%%

diff -u <(./parser ../Tests/test1.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test1.cmm)  no
diff -u <(./parser ../Tests/test2.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test2.cmm)  no
diff -u <(./parser ../Tests/test3.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test3.cmm)  yes
diff -u <(./parser ../Tests/test4.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test4.cmm)  yes
diff -u <(./parser ../Tests/test5.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test5.cmm)  yes
diff -u <(./parser ../Tests/test6.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test6.cmm)  no
diff -u <(./parser ../Tests/test7.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test7.cmm)  yes
diff -u <(./parser ../Tests/test8.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test8.cmm)  yes
diff -u <(./parser ../Tests/test9.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test9.cmm)     yes
diff -u <(./parser ../Tests/test10.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test10.cmm)    yes
diff -u <(./parser ../Tests/test11.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test11.cmm)    no
diff -u <(./parser ../Tests/test12.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test12.cmm)    no
diff -u <(./parser ../Tests/test13.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test13.cmm)    no
diff -u <(./parser ../Tests/test14.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test14.cmm)    no
diff -u <(./parser ../Tests/test15.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test15.cmm)    no
diff -u <(./parser ../Tests/test16.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test16.cmm)    no
diff -u <(./parser ../Tests/test17.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test17.cmm)    no
diff -u <(./parser ../Tests/test18.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test18.cmm)    no
diff -u <(./parser ../Tests/test19.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test19.cmm)    no key
diff -u <(./parser ../Tests/test20.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test20.cmm)    no key
diff -u <(./parser ../Tests/test21.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test21.cmm)    no key
diff -u <(./parser ../Tests/test22.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test22.cmm)    yes
diff -u <(./parser ../Tests/test23.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test23.cmm)    yes
diff -u <(./parser ../Tests/test24.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test24.cmm)    yes
diff -u <(./parser ../Tests/test27.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test27.cmm)    no
diff -u <(./parser ../Tests/test28.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test28.cmm)    no
diff -u <(./parser ../Tests/test33.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test33.cmm)    no




diff -u <(./parser ../Tests/test_1.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_1.cmm)      yes
diff -u <(./parser ../Tests/test_2.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_2.cmm)     yes key
diff -u <(./parser ../Tests/test_3.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_3.cmm)      yes
diff -u <(./parser ../Tests/test_4.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_4.cmm)      yes
diff -u <(./parser ../Tests/test_5.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_5.cmm)      yes
diff -u <(./parser ../Tests/test_6.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_6.cmm)      yes
diff -u <(./parser ../Tests/test_7.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_7.cmm)      yes
diff -u <(./parser ../Tests/test_8.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_8.cmm)      yes
diff -u <(./parser ../Tests/test_9.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_9.cmm)      yes
diff -u <(./parser ../Tests/test_10.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_10.cmm)    yes
diff -u <(./parser ../Tests/test_11.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_11.cmm)    yes
diff -u <(./parser ../Tests/test_12.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_12.cmm)    yes
diff -u <(./parser ../Tests/test_13.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_13.cmm)    yes
diff -u <(./parser ../Tests/test_14.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_14.cmm)    yes
diff -u <(./parser ../Tests/test_15.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_15.cmm)    yes
diff -u <(./parser ../Tests/test_16.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_16.cmm)    yes
diff -u <(./parser ../Tests/test_17.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_17.cmm)    yes
diff -u <(./parser ../Tests/test_18.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_18.cmm)    yes
diff -u <(./parser ../Tests/test_19.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_19.cmm)
diff -u <(./parser ../Tests/test_20.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_20.cmm)
diff -u <(./parser ../Tests/test_21.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_21.cmm)
diff -u <(./parser ../Tests/test_22.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_22.cmm)    yes
diff -u <(./parser ../Tests/test_23.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_23.cmm)
diff -u <(./parser ../Tests/test_24.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_24.cmm)
diff -u <(./parser ../Tests/test_25.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_25.cmm)    yes
diff -u <(./parser ../Tests/test_26.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_26.cmm)    yes
diff -u <(./parser ../Tests/test_27.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_27.cmm)    yes
diff -u <(./parser ../Tests/test_28.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_28.cmm)    yes
diff -u <(./parser ../Tests/test_29.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_29.cmm)    yes
diff -u <(./parser ../Tests/test_30.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_30.cmm)    yes
diff -u <(./parser ../Tests/test_31.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/Code/parser ../Tests/test_31.cmm)    yes





diff -u <(./parser ../Tests/test_2.cmm) <(~/Compiler/example/Compiler_lab-master/lab1/parser ../Tests/test_2.cmm)

./parser ../Tests/A_1.cmm
./parser ../Tests/A_2.cmm
./parser ../Tests/A_3.cmm
./parser ../Tests/A_4.cmm
./parser ../Tests/A_5.cmm
./parser ../Tests/A_6.cmm
./parser ../Tests/A_7.cmm
./parser ../Tests/A_8.cmm
./parser ../Tests/A_9.cmm
./parser ../Tests/B_1.cmm
./parser ../Tests/B_2.cmm
./parser ../Tests/C_1.cmm
./parser ../Tests/C_2.cmm
./parser ../Tests/D_1.cmm
./parser ../Tests/D_2.cmm
./parser ../Tests/D_3.cmm
./parser ../Tests/E1_1.cmm
./parser ../Tests/E1_2.cmm
./parser ../Tests/E2_1.cmm
./parser ../Tests/E2_2.cmm
./parser ../Tests/E3_1.cmm
./parser ../Tests/E3_2.cmm